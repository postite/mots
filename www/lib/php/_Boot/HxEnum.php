<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace php\_Boot;

use \php\Boot;

/**
 * Base class for enum types
 */
class HxEnum {
	/**
	 * @var int
	 */
	public $index;
	/**
	 * @var mixed
	 */
	public $params;
	/**
	 * @var string
	 */
	public $tag;

	/**
	 * @param string $tag
	 * @param int $index
	 * @param mixed $arguments
	 * 
	 * @return void
	 */
	public function __construct ($tag, $index, $arguments = null) {
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:654: characters 3-17
		$this->tag = $tag;
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:655: characters 3-21
		$this->index = $index;
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:656: characters 3-63
		$this->params = ($arguments === null ? [] : $arguments);
	}

	/**
	 * PHP magic method to get string representation of this `Class`
	 * 
	 * @return string
	 */
	public function __toString () {
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:671: characters 3-20
		$result = $this->tag;
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:672: lines 672-675
		if (count($this->params) > 0) {
			#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:674: characters 4-54
			$result = ($result??'null') . "(" . (implode(",", array_map(function ($item) {
				#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:673: characters 51-78
				return Boot::stringify($item);
			}, $this->params))??'null') . ")";
		}
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:676: characters 3-16
		return $result;
	}

	/**
	 * Get string representation of this `Class`
	 * 
	 * @return string
	 */
	public function toString () {
		#/Users/ut/haxe/versions/4.0.0-rc.1/std/php/Boot.hx:663: characters 3-22
		return $this->__toString();
	}
}

Boot::registerClass(HxEnum::class, 'php._Boot.HxEnum');
