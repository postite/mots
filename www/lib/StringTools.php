<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

use \php\Boot;

/**
 * This class provides advanced methods on Strings. It is ideally used with
 * `using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)
 * to the `String` class.
 * If the first argument to any of the methods is null, the result is
 * unspecified.
 */
class StringTools {
	/**
	 * Replace all occurrences of the String `sub` in the String `s` by the
	 * String `by`.
	 * If `sub` is the empty String `""`, `by` is inserted after each character
	 * of `s`. If `by` is also the empty String `""`, `s` remains unchanged.
	 * This is a convenience function for `s.split(sub).join(by)`.
	 * If `sub` or `by` are null, the result is unspecified.
	 * 
	 * @param string $s
	 * @param string $sub
	 * @param string $by
	 * 
	 * @return string
	 */
	static public function replace ($s, $sub, $by) {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/StringTools.hx:81: lines 81-83
		if ($sub === "") {
			#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/StringTools.hx:82: characters 4-50
			return implode($by, str_split($s));
		}
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/StringTools.hx:84: characters 3-40
		return str_replace($sub, $by, $s);
	}


	/**
	 * Tells if the string `s` starts with the string `start`.
	 * If `start` is `null`, the result is unspecified.
	 * If `start` is the empty String `""`, the result is true.
	 * 
	 * @param string $s
	 * @param string $start
	 * 
	 * @return bool
	 */
	static public function startsWith ($s, $start) {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/StringTools.hx:44: characters 10-53
		if ($start !== "") {
			#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/StringTools.hx:44: characters 25-53
			return Boot::equal(strpos($s, $start), 0);
		} else {
			#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/StringTools.hx:44: characters 10-53
			return true;
		}
	}
}


Boot::registerClass(StringTools::class, 'StringTools');
