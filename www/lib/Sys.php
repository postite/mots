<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

use \haxe\io\Output;
use \php\Boot;
use \sys\io\FileOutput;

/**
 * This class gives you access to many base functionalities of system platforms. Looks in `sys` sub packages for more system APIs.
 */
class Sys {
	/**
	 * Gives the most precise timestamp value (in seconds) but only account for the actual time spent running on the CPU for the current thread/process.
	 * 
	 * @return float
	 */
	static public function cpuTime () {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/Sys.hx:109: characters 3-54
		return microtime(true) - $_SERVER["REQUEST_TIME"];
	}


	/**
	 * Print any value on the standard output, followed by a newline.
	 * 
	 * @param mixed $v
	 * 
	 * @return void
	 */
	static public function println ($v) {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/Sys.hx:36: characters 3-11
		echo(\Std::string($v));
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/Sys.hx:37: characters 3-14
		echo("\x0A");
	}


	/**
	 * Returns the process standard output on which you can write.
	 * 
	 * @return Output
	 */
	static public function stdout () {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/_std/Sys.hx:137: characters 3-43
		return new FileOutput((defined("STDOUT") ? STDOUT : fopen("php://stdout", "w")));
	}
}


Boot::registerClass(Sys::class, 'Sys');
