<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace utest;

use \php\_Boot\HxClosure;
use \php\Boot;
use \haxe\rtti\Meta;
use \php\_Boot\HxException;
use \utest\_IgnoredFixture\IgnoredFixture_Impl_;
use \utest\utils\AccessoriesUtils;

class TestFixture {
	/**
	 * @var string
	 */
	public $ignoringInfo;
	/**
	 * @var bool
	 */
	public $isITest;
	/**
	 * @var string
	 */
	public $method;
	/**
	 * @var string
	 */
	public $setup;
	/**
	 * @var string
	 */
	public $setupAsync;
	/**
	 * @var \Closure
	 */
	public $setupMethod;
	/**
	 * @var object
	 */
	public $target;
	/**
	 * @var string
	 */
	public $teardown;
	/**
	 * @var string
	 */
	public $teardownAsync;
	/**
	 * @var \Closure
	 */
	public $teardownMethod;
	/**
	 * @var object
	 */
	public $test;


	/**
	 * @param ITest $target
	 * @param object $test
	 * @param object $accessories
	 * 
	 * @return TestFixture
	 */
	static public function ofData ($target, $test, $accessories) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:26: characters 5-54
		$fixture = new TestFixture($target, $test->name);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:27: characters 5-27
		$fixture->isITest = true;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:28: characters 5-24
		$fixture->test = $test;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:29: characters 5-77
		$fixture->setupMethod = AccessoriesUtils::getSetup($accessories);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:30: characters 5-83
		$fixture->teardownMethod = AccessoriesUtils::getTeardown($accessories);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:31: characters 5-19
		return $fixture;
	}


	/**
	 * @param object $target
	 * @param string $method
	 * @param string $setup
	 * @param string $teardown
	 * @param string $setupAsync
	 * @param string $teardownAsync
	 * 
	 * @return void
	 */
	public function __construct ($target, $method, $setup = null, $teardown = null, $setupAsync = null, $teardownAsync = null) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:16: characters 22-27
		$this->isITest = false;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:36: characters 5-32
		$this->target = $target;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:37: characters 5-32
		$this->method = $method;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:38: characters 5-31
		$this->setup = $setup;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:39: characters 5-36
		$this->setupAsync = $setupAsync;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:40: characters 5-34
		$this->teardown = $teardown;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:41: characters 5-39
		$this->teardownAsync = $teardownAsync;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:42: characters 5-37
		$this->ignoringInfo = $this->getIgnored();
	}


	/**
	 * @param string $name
	 * @param string $arg
	 * 
	 * @return void
	 */
	public function checkMethod ($name, $arg) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:46: characters 5-45
		$field = \Reflect::field($this->target, $name);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:47: characters 5-41
		if ($field === null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:47: characters 36-41
			throw new HxException(($arg??'null') . " function " . ($name??'null') . " is not a field of target");
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:48: characters 5-41
		if (!(($field instanceof \Closure) || ($field instanceof HxClosure))) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:48: characters 36-41
			throw new HxException(($arg??'null') . " function " . ($name??'null') . " is not a function");
		}
	}


	/**
	 * @return string
	 */
	public function getIgnored () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:53: characters 5-64
		$metasForTestMetas = \Reflect::getProperty(Meta::getFields(\Type::getClass($this->target)), $this->method);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:55: lines 55-57
		if (($metasForTestMetas === null) || !\Reflect::hasField($metasForTestMetas, "Ignored")) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:56: characters 7-41
			return IgnoredFixture_Impl_::NotIgnored();
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:59: characters 5-93
		$ignoredArgs = \Reflect::getProperty($metasForTestMetas, "Ignored");
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:60: lines 60-62
		if (($ignoredArgs === null) || ($ignoredArgs->length === 0) || (($ignoredArgs->arr[0] ?? null) === null)) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:61: characters 7-38
			return IgnoredFixture_Impl_::Ignored();
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestFixture.hx:65: characters 5-49
		return IgnoredFixture_Impl_::Ignored(\Std::string(($ignoredArgs->arr[0] ?? null)));
	}
}


Boot::registerClass(TestFixture::class, 'utest.TestFixture');
