<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace utest;

use \haxe\Timer;
use \php\Boot;
use \haxe\CallStack;
use \haxe\ds\List_hx;
use \php\_Boot\HxException;

class TestHandler {
	/**
	 * @var int
	 */
	const POLLING_TIME = 10;

	/**
	 * @var List_hx
	 */
	public $asyncStack;
	/**
	 * @var float
	 */
	public $expiration;
	/**
	 * @var bool
	 */
	public $finished;
	/**
	 * @var TestFixture
	 */
	public $fixture;
	/**
	 * @var Dispatcher
	 */
	public $onComplete;
	/**
	 * @var Dispatcher
	 */
	public $onPrecheck;
	/**
	 * @var Dispatcher
	 */
	public $onTested;
	/**
	 * @var Dispatcher
	 */
	public $onTimeout;
	/**
	 * @var \Closure
	 */
	public $precheck;
	/**
	 * @var List_hx
	 */
	public $results;
	/**
	 * @var bool
	 */
	public $wasBound;

	/**
	 * @param int $pops
	 * 
	 * @return \Array_hx
	 */
	static public function exceptionStack ($pops = 2) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:84: lines 84-89
		if ($pops === null) {
			$pops = 2;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:85: characters 5-49
		$stack = CallStack::exceptionStack();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:86: lines 86-87
		while ($pops-- > 0) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:87: characters 7-18
			if ($stack->length > 0) {
				$stack->length--;
			}
			array_pop($stack->arr);
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:88: characters 5-17
		return $stack;
	}

	/**
	 * @param TestFixture $fixture
	 * 
	 * @return void
	 */
	public function __construct ($fixture) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:20: characters 31-36
		$this->wasBound = false;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:10: characters 44-49
		$this->finished = false;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:23: characters 5-30
		if ($fixture === null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:23: characters 25-30
			throw new HxException("fixture argument is null");
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:24: characters 5-28
		$this->fixture = $fixture;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:25: characters 5-31
		$this->results = new List_hx();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:26: characters 5-31
		$this->asyncStack = new List_hx();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:27: characters 5-34
		$this->onTested = new Dispatcher();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:28: characters 5-34
		$this->onTimeout = new Dispatcher();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:29: characters 5-34
		$this->onComplete = new Dispatcher();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:30: characters 5-34
		$this->onPrecheck = new Dispatcher();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:32: lines 32-34
		if ($fixture->ignoringInfo !== null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:33: characters 7-61
			$this->results->add(Assertation::Ignore($fixture->ignoringInfo));
		}
	}

	/**
	 * Adds a function that is called asynchronously.
	 *
	 * Example:
	 * <pre>
	 * var fixture = new TestFixture(new TestClass(), "test");
	 * var handler = new TestHandler(fixture);
	 * var flag = false;
	 * var async = handler.addAsync(function() {
	 *   flag = true;
	 * }, 50);
	 * handler.onTimeout.add(function(h) {
	 *   trace("TIMEOUT");
	 * });
	 * handler.onTested.add(function(h) {
	 *   trace(flag ? "OK" : "FAILED");
	 * });
	 * haxe.Timer.delay(function() async(), 10);
	 * handler.execute();
	 * </pre>
	 * @param  f, the function that is called asynchrnously
	 * @param  timeout, the maximum time to wait for f() (default is 250)
	 * @return returns a function closure that must be executed asynchrnously
	 * 
	 * @param \Closure $f
	 * @param int $timeout
	 * 
	 * @return \Closure
	 */
	public function addAsync ($f = null, $timeout = 250) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:155: lines 155-173
		if ($timeout === null) {
			$timeout = 250;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:156: lines 156-157
		if (null === $f) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:157: characters 7-25
			$f = function () {
			};
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:158: characters 5-22
		$this->asyncStack->add($f);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:159: characters 5-24
		$handler = $this;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:160: characters 5-24
		$this->setTimeout($timeout);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:161: lines 161-172
		return function ()  use (&$f, &$e, &$handler) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:162: lines 162-165
			if (!$handler->asyncStack->remove($f)) {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:163: characters 9-79
				$handler->results->add(Assertation::AsyncError("async function already executed", new \Array_hx()));
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:164: characters 9-15
				return;
			}
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:166: lines 166-171
			try {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:167: characters 9-30
				$handler->bindHandler();
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:168: characters 9-12
				$f();
			} catch (\Throwable $__hx__caught_e) {
				CallStack::saveExceptionTrace($__hx__caught_e);
				$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
				$e = $__hx__real_e;
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:170: characters 9-62
				$handler->results->add(Assertation::AsyncError($e, TestHandler::exceptionStack(0)));
			}
		};
	}

	/**
	 * @param \Closure $f
	 * @param int $timeout
	 * 
	 * @return \Closure
	 */
	public function addEvent ($f, $timeout = 250) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:175: lines 175-191
		if ($timeout === null) {
			$timeout = 250;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:176: characters 5-22
		$this->asyncStack->add($f);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:177: characters 5-24
		$handler = $this;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:178: characters 5-24
		$this->setTimeout($timeout);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:179: lines 179-190
		return function ($e)  use (&$f, &$e1, &$handler) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:180: lines 180-183
			if (!$handler->asyncStack->remove($f)) {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:181: characters 9-70
				$handler->results->add(Assertation::AsyncError("event already executed", new \Array_hx()));
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:182: characters 9-15
				return;
			}
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:184: lines 184-189
			try {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:185: characters 9-30
				$handler->bindHandler();
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:186: characters 9-13
				$f($e);
			} catch (\Throwable $__hx__caught_e) {
				CallStack::saveExceptionTrace($__hx__caught_e);
				$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
				$e1 = $__hx__real_e;
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:188: characters 9-62
				$handler->results->add(Assertation::AsyncError($e1, TestHandler::exceptionStack(0)));
			}
		};
	}

	/**
	 * @return void
	 */
	public function bindHandler () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:115: characters 5-25
		if ($this->wasBound) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:115: characters 19-25
			return;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:116: characters 5-38
		Assert::$results = $this->results;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:117: characters 5-39
		Assert::$createAsync = Boot::getInstanceClosure($this, 'addAsync');
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:118: characters 5-39
		Assert::$createEvent = Boot::getInstanceClosure($this, 'addEvent');
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:119: characters 5-20
		$this->wasBound = true;
	}

	/**
	 * @return void
	 */
	public function checkTested () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:93: lines 93-99
		if (($this->expiration === null) || ($this->asyncStack->length === 0)) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:94: characters 7-15
			$this->tested();
		} else if (microtime(true) > $this->expiration) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:96: characters 7-16
			$this->timeout();
		} else {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:98: characters 7-50
			Timer::delay(Boot::getInstanceClosure($this, 'checkTested'), 10);
		}
	}

	/**
	 * @return void
	 */
	public function completed () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:221: lines 221-248
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:222: lines 222-225
		if ($this->fixture->ignoringInfo !== null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:223: characters 7-25
			$this->completedFinally();
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:224: characters 7-13
			return;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:228: characters 5-23
		$isSync = true;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:229: characters 5-31
		$expectingAsync = true;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:230: lines 230-236
		$complete = function ()  use (&$isSync, &$expectingAsync, &$_gthis) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:231: lines 231-234
			if ($isSync) {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:232: characters 9-31
				$expectingAsync = false;
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:233: characters 9-15
				return;
			}
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:235: characters 7-25
			$_gthis->completedFinally();
		};
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:238: lines 238-243
		try {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:239: characters 7-38
			$this->executeMethod($this->fixture->teardown);
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:240: characters 7-58
			$this->executeAsyncMethod($this->fixture->teardownAsync, $complete);
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			$e = $__hx__real_e;
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:242: characters 7-55
			$this->results->add(Assertation::TeardownError($e, TestHandler::exceptionStack(2)));
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:244: characters 5-19
		$isSync = false;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:245: lines 245-247
		if (!$expectingAsync) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:246: characters 7-25
			$this->completedFinally();
		}
	}

	/**
	 * @return void
	 */
	public function completedFinally () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:251: characters 5-20
		$this->finished = true;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:252: characters 5-20
		$this->unbindHandler();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:253: characters 5-30
		$this->onComplete->dispatch($this);
	}

	/**
	 * @return void
	 */
	public function execute () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:37: lines 37-68
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:38: lines 38-41
		if ($this->fixture->ignoringInfo !== null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:39: characters 7-23
			$this->executeFinally();
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:40: characters 7-13
			return;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:44: characters 5-23
		$isSync = true;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:45: characters 5-31
		$expectingAsync = true;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:46: lines 46-53
		$run = function ()  use (&$isSync, &$expectingAsync, &$_gthis) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:47: lines 47-50
			if ($isSync) {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:48: characters 9-31
				$expectingAsync = false;
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:49: characters 9-15
				return;
			}
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:51: characters 7-29
			$_gthis->executeFixtureMethod();
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:52: characters 7-23
			$_gthis->executeFinally();
		};
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:55: lines 55-63
		try {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:56: characters 7-35
			$this->executeMethod($this->fixture->setup);
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:57: characters 7-50
			$this->executeAsyncMethod($this->fixture->setupAsync, $run);
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:58: lines 58-60
			if (!$expectingAsync) {
				#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:59: characters 9-31
				$this->executeFixtureMethod();
			}
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			$e = $__hx__real_e;
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:62: characters 7-51
			$this->results->add(Assertation::SetupError($e, TestHandler::exceptionStack()));
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:64: characters 5-19
		$isSync = false;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:65: lines 65-67
		if (!$expectingAsync) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:66: characters 7-23
			$this->executeFinally();
		}
	}

	/**
	 * @param string $name
	 * @param \Closure $done
	 * 
	 * @return void
	 */
	public function executeAsyncMethod ($name, $done) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:200: lines 200-203
		if ($name === null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:201: characters 7-13
			$done();
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:202: characters 7-13
			return;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:204: characters 5-18
		$this->bindHandler();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:205: characters 5-84
		\Reflect::callMethod($this->fixture->target, \Reflect::field($this->fixture->target, $name), \Array_hx::wrap([$done]));
	}

	/**
	 * @return void
	 */
	public function executeFinally () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:79: characters 5-30
		$this->onPrecheck->dispatch($this);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:80: characters 5-18
		$this->checkTested();
	}

	/**
	 * @return void
	 */
	public function executeFixtureMethod () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:71: lines 71-75
		try {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:72: characters 7-36
			$this->executeMethod($this->fixture->method);
		} catch (\Throwable $__hx__caught_e) {
			CallStack::saveExceptionTrace($__hx__caught_e);
			$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
			$e = $__hx__real_e;
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:74: characters 7-46
			$this->results->add(Assertation::Error($e, TestHandler::exceptionStack()));
		}
	}

	/**
	 * @param string $name
	 * 
	 * @return void
	 */
	public function executeMethod ($name) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:194: characters 5-28
		if ($name === null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:194: characters 22-28
			return;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:195: characters 5-18
		$this->bindHandler();
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:196: characters 5-80
		\Reflect::callMethod($this->fixture->target, \Reflect::field($this->fixture->target, $name), new \Array_hx());
	}

	/**
	 * @param int $timeout
	 * 
	 * @return void
	 */
	public function setTimeout ($timeout) {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:110: characters 5-55
		$newExpire = microtime(true) + $timeout / 1000;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:111: characters 5-102
		$this->expiration = ($this->expiration === null ? $newExpire : ($newExpire > $this->expiration ? $newExpire : $this->expiration));
	}

	/**
	 * @return void
	 */
	public function tested () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:209: lines 209-210
		if ($this->results->length === 0) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:210: characters 7-44
			$this->results->add(Assertation::Warning("no assertions"));
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:211: characters 5-28
		$this->onTested->dispatch($this);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:212: characters 5-16
		$this->completed();
	}

	/**
	 * @return void
	 */
	public function timeout () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:216: characters 5-53
		$this->results->add(Assertation::TimeoutError($this->asyncStack->length, new \Array_hx()));
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:217: characters 5-29
		$this->onTimeout->dispatch($this);
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:218: characters 5-16
		$this->completed();
	}

	/**
	 * @return void
	 */
	public function unbindHandler () {
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:124: characters 5-26
		if (!$this->wasBound) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:124: characters 20-26
			return;
		}
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:125: characters 5-30
		Assert::$results = null;
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:126: characters 5-64
		Assert::$createAsync = function ($f = null, $t = null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:126: characters 44-63
			return function () {
			};
		};
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:127: characters 5-64
		Assert::$createEvent = function ($f1, $t1 = null) {
			#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:127: characters 43-63
			return function ($e) {
			};
		};
		#/Users/ut/haxe/haxe_libraries/utest/1.9.5/github/aca590b256e0879cd7fbfcd47ca4f3a0a0ce1845/src/utest/TestHandler.hx:128: characters 5-21
		$this->wasBound = false;
	}
}

Boot::registerClass(TestHandler::class, 'utest.TestHandler');
